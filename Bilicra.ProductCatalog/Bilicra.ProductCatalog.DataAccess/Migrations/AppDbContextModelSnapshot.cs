// <auto-generated />
using System;
using Bilicra.ProductCatalog.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bilicra.ProductCatalog.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Bilicra.ProductCatalog.Common.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4512880-ecb2-444c-8c03-2908ab51892b"),
                            Code = "testCode",
                            CreatedDate = new DateTime(2021, 2, 28, 16, 41, 49, 407, DateTimeKind.Local).AddTicks(5620),
                            Currency = 0,
                            IsConfirmed = true,
                            IsDeleted = false,
                            Name = "test product",
                            Price = 55m
                        },
                        new
                        {
                            Id = new Guid("698f932e-dcf6-4580-a5ca-5d572ade4765"),
                            Code = "testCode2",
                            CreatedDate = new DateTime(2021, 2, 28, 16, 41, 49, 408, DateTimeKind.Local).AddTicks(5174),
                            Currency = 0,
                            IsConfirmed = false,
                            IsDeleted = false,
                            Name = "test product 2",
                            Price = 1000m
                        });
                });

            modelBuilder.Entity("Bilicra.ProductCatalog.Common.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b624b02c-4337-44fc-8aad-6bbefb7ed8e6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user.test@gmail.com",
                            IsDeleted = false,
                            Name = "user",
                            Password = "OUQbMtDPGRPjcQlPLR0N+H4pwBj0RKx7sHH9lySmNww=",
                            Salt = "KUDTfNFTrOMjdx5GtmpLYQ==",
                            Surname = "test",
                            Username = "test"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
